{"version":3,"file":"js/789.b312d4fc.js","mappings":"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","sources":["webpack://kadi-tidi/./src/helpers/lobby/index.js","webpack://kadi-tidi/./src/helpers/match/index.js","webpack://kadi-tidi/./src/components/molecule/Sidebar/Sidebar.vue","webpack://kadi-tidi/./src/components/molecule/Sidebar/Sidebar.vue?5d3a","webpack://kadi-tidi/./src/pages/lobby/Lobby.vue","webpack://kadi-tidi/./src/pages/lobby/Lobby.vue?3302"],"sourcesContent":["import { apiRequest } from \"@/config/axios\";\r\nimport cards from \"@/config/cards.json\";\r\nimport { API_URL } from \"@/config/env\";\r\n\r\n// Calculate cards for the lobby/match\r\nexport function calcMaxCards(numberOfPlayers = 0, demandedCards = 15) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const minCards = 12;\r\n            const maxCards = 25;\r\n            let cardsArr = [];\r\n            const perDeck = 52;\r\n            let totalDecks = 1;\r\n            const requiredCards = numberOfPlayers * (demandedCards < minCards ? minCards : maxCards < demandedCards ? maxCards : demandedCards);\r\n\r\n            let extraCards = 0;\r\n            let removed = 0;\r\n\r\n            while((totalDecks * perDeck) < requiredCards) {\r\n                totalDecks++;\r\n            }\r\n\r\n            extraCards = (totalDecks * perDeck) - requiredCards;\r\n\r\n            console.log(\"extraCards: \", extraCards);\r\n            console.log(\"totalDecks: \", totalDecks);\r\n            console.log(\"totalCards: \", (totalDecks * perDeck));\r\n\r\n            // sort cards array to ascending on number\r\n            for (let index = 0; index < totalDecks; index++) {\r\n                cardsArr = [...cardsArr, ...cards]\r\n            }\r\n            cardsArr = cardsArr.sort((a, b) => a.number < b.number ? -1 : 1);\r\n\r\n            if(extraCards > 0) {\r\n                while (removed != extraCards) {\r\n                    const cardIndex = cardsArr.findIndex((x) => x.point === 0);\r\n\r\n                    if(cardIndex) {\r\n                        cardsArr.splice(cardIndex, 1);\r\n                        removed++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const partners = Math.floor(numberOfPlayers/2)\r\n            const maxPoints = cardsArr?.filter((x) => x.point)?.map((x) => x.point)?.reduce((acc, next) => acc + next, 0);\r\n            let minPoints = Math.ceil((maxPoints/2) + ((maxPoints/2) * (partners/numberOfPlayers)))\r\n            if(minPoints % 5 !== 0) {\r\n                minPoints -= (minPoints % 5);\r\n            }\r\n\r\n            resolve({cards: cardsArr, noOfDecks: totalDecks, minPoints, maxPoints})\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n}\r\n\r\n// Create to lobby\r\nexport function createLobby(userId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const lobbyData = {\r\n                userId: userId\r\n            };\r\n\r\n            apiRequest.post(`${API_URL}/lobbies/create`, lobbyData)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// Get lobby details\r\nexport function getLobby(lobbyId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n\r\n            apiRequest.get(`${API_URL}/lobbies/${lobbyId}`)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// Update lobby details\r\nexport function updateLobby(lobbyId, updateObj) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n\r\n            apiRequest.patch(`${API_URL}/lobbies/${lobbyId}`, updateObj)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// Invite to lobby\r\nexport function inviteToLobby(lobbyId, sender, receiver) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const {userName, email} = receiver;\r\n\r\n            const inviteObject = {\r\n                sender\r\n            };\r\n            if(userName) {\r\n                // Invite using username\r\n                inviteObject.receiver = {userName: userName};\r\n            } else if(email) {\r\n                // Invite using email\r\n                inviteObject.receiver = {email: email};\r\n            }\r\n\r\n            apiRequest.post(`${API_URL}/lobbies/${lobbyId}/invite`, inviteObject)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// JOIN lobby\r\nexport function joinLobby(data) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const {inviteId, lobbyCode, userId} = data\r\n            if(!inviteId && !lobbyCode) return reject(\"No inviteId or lobbyCode found\")\r\n\r\n            if(lobbyCode && !userId) {\r\n                return reject(\"No userId found\")\r\n            }\r\n\r\n            let endpoint = \"\";\r\n            const axiosData = {}\r\n            if(inviteId) {\r\n                endpoint = `/lobbies/invite/${inviteId}`\r\n            } else {\r\n                endpoint = `/lobbies/code/${lobbyCode}`\r\n                axiosData.userId = userId;\r\n            }\r\n            apiRequest.post(endpoint, axiosData)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// REJECT lobby\r\nexport function rejectInvite(inviteId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!inviteId) return reject(\"No inviteId found\")\r\n\r\n            apiRequest.delete(`${API_URL}/lobbies/invite/${inviteId}`)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// LEAVE LOBBY\r\nexport function leaveLobby(lobbyId, userId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No Lobby Id found\");\r\n            if(!userId) return reject(\"No userId found\");\r\n\r\n            apiRequest.patch(`/lobbies/${lobbyId}/leave`, {userId})\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\n// Lobby results\r\nexport function showLobbyResults(lobbyId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No Lobby Id found\")\r\n            // GET match results on lobbyId\r\n            console.log(\"lobbyId: \", lobbyId);\r\n            resolve([]);\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}","import { apiRequest } from \"@/config/axios\";\r\n\r\n// Start Match\r\nexport function createMatch(lobbyId, matchDetails) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No Lobby Id found\");\r\n\r\n            apiRequest.post(`/lobbies/${lobbyId}/matches/create`, matchDetails)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport function getMatch(lobbyId, matchId) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n            if(!matchId) return reject(\"No matchId found\");\r\n\r\n            apiRequest.get(`/lobbies/${lobbyId}/matches/${matchId}`)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport function updateBid(lobbyId, matchId, data) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n            if(!matchId) return reject(\"No matchId found\");\r\n            if(!data) return reject(\"No nextPlayer found\");\r\n\r\n            apiRequest.patch(`/lobbies/${lobbyId}/matches/${matchId}/bid`, data)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport function setTrumpAndPartners(lobbyId, matchId, data) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n            if(!matchId) return reject(\"No matchId found\");\r\n            if(!data) return reject(\"No nextPlayer found\");\r\n\r\n            apiRequest.patch(`/lobbies/${lobbyId}/matches/${matchId}/setTrumpAndPartner`, data)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}\r\n\r\nexport function playCard(lobbyId, matchId, data) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            if(!lobbyId) return reject(\"No lobbyId found\");\r\n            if(!matchId) return reject(\"No matchId found\");\r\n            if(!data) return reject(\"No nextPlayer found\");\r\n\r\n            apiRequest.patch(`/lobbies/${lobbyId}/matches/${matchId}/play`, data)\r\n            .then((res) => {\r\n                resolve(res)\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    })\r\n}","<template>\r\n    <teleport to='#my-sidebar'>\r\n        <div\r\n            class=\"position-fi justify-content-end sidebar\"\r\n            v-if=\"unMount ? visible : true\"\r\n            :class=\"`${className} ${left ? 'flex-row-reverse' : ''} ${!visible ? 'd-none' : 'd-flex'}`\"\r\n            :style=\"[{'z-index':zIndex}]\"\r\n        >\r\n            <div class=\"back-drop\" @click=\"closeOnBackDrop ? $emit('update:visible', !visible) : ''\"></div>\r\n            <div\r\n                :style=\"`${width ? `width: ${width}` : ''}; top: ${top}; height: calc(100% - ${top});`\"\r\n                :class=\"{'hide-side-left':!showSide && left, 'hide-side-right':!showSide && !left}\"\r\n                class=\"position-fi bg-white d-flex flex-column sidebar-content z-index-7\"\r\n            >\r\n                <div v-if=\"!hideHeader\" :class=\"headClass\" class=\"sidebar-head bg-white d-flex align-items-center justify-content-between px-1 blue border-bottom cursor-default\">\r\n                    <slot name=\"head\">\r\n                        <div class=\"assignee-headtitle d-block text-ellipsis text-nowrap\">\r\n                            <slot name=\"head-left\">\r\n                                {{title}}\r\n                            </slot>\r\n                        </div>\r\n                        <div>\r\n                            <slot name=\"head-mid\">\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"cursor-pointer d-flex align-items-center\">\r\n                            <slot name=\"head-right\">\r\n                                <button v-if=\"multiSelect && showClear\" class=\"clear-all outline-primary bg-light-gray black mr-1\" :class=\"{'opacity-5 cursor-default': !value.length, 'opacity-10 cursor-pointer': value.length}\" @click=\"$emit('clear')\">Clear all</button>\r\n                                <button class=\"btn btn-danger\" @click=\"$emit('update:visible', !visible)\">X</button>\r\n                                <!-- <img :src=\"closeBlueImage\" alt=\"closeButton\" class=\"cursor-pointer\" /> -->\r\n                            </slot>\r\n                        </div>\r\n                    </slot>\r\n                </div>\r\n                <div class=\"black sidebar-body bg-white style-scroll\" :style=\"{\r\n                    'height': (hideHeader ? '100%' : '')\r\n                    }\"\r\n                    :class=\"bodyClass\"\r\n                >\r\n                    <div v-if=\"enableSearch\" class=\"bg-white mobile-list-inputsearch-wrapper border-bottom p-15px\">\r\n                        <input ref=\"sidebar_search\" type=\"text\" v-model=\"search\" placeholder=\"Search\" class=\"form-control listsidebar-search font-size-16\" @input=\"$emit('searchChange', search)\">\r\n                    </div>\r\n                    <slot name=\"body\">\r\n                        <div v-if=\"defaultLayout\" class=\"overflow-y-auto sidebar-options overflow-x-hidden\" :style=\"`height: ${!enableSearch ? 'calc(100% - 0px);' : 'calc(100% - 52px);'}`\">\r\n                            <slot\r\n                                name=\"options\"\r\n                                v-for=\"(option, index) in options\" :key=\"index\"\r\n                                :data=\"option\"\r\n                            />\r\n                        </div>\r\n                    </slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </teleport>\r\n</template>\r\n\r\n<script setup>\r\n// PACKAGES\r\nimport { defineComponent, defineEmits, defineProps, nextTick, onMounted, ref, watch } from \"vue\";\r\n\r\n// IMAGES\r\n// const closeBlueImage = require(\"@/assets/images/svg/CloseSidebar.svg\");\r\n\r\ndefineComponent({\r\n    name: \"Sidebar-Component\"\r\n})\r\n\r\n// EMITS\r\ndefineEmits([\"update:visible\", \"selected\", \"removed\", \"update:value\", \"clear\", \"searchChange\"])\r\n\r\n// PROPS\r\nconst props = defineProps({\r\n    title: {\r\n        type: String,\r\n        default: \"Title\"\r\n    },\r\n    top: {\r\n        type: String,\r\n        default: \"46px\"\r\n    },\r\n    offset: {\r\n        type: String,\r\n        default: \"0px\"\r\n    },\r\n    visible: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    defaultLayout: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    options: {\r\n        type: Array,\r\n        default: () => []\r\n    },\r\n    value: {\r\n        type: Array,\r\n        default: () => []\r\n    },\r\n    left: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    className: {\r\n        type: String,\r\n        default: \"\"\r\n    },\r\n    width: {\r\n        type: String,\r\n        default: \"374px\"\r\n    },\r\n    headClass: {\r\n        type: String,\r\n        default: \"\"\r\n    },\r\n    bodyClass: {\r\n        type: String,\r\n        default: \"\"\r\n    },\r\n\r\n    unMount: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    hideHeader: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n    grouped: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    enableSearch: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    closeOnBackDrop: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    closeOnSelect: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    multiSelect: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    showClear: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    zIndex: {\r\n        type: Number,\r\n        default:7\r\n    },\r\n    isDefault: {\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    imageDisplayForPriority: {\r\n        type:Boolean,\r\n        default:false\r\n    }\r\n})\r\nconst showSide = ref(false);\r\nconst search = ref(\"\");\r\nconst sidebar_search = ref(null);\r\n// eslint-disable-next-line\r\nconst visible = ref(false);\r\n\r\nonMounted(() => {\r\n    if(props.visible === true) {\r\n        visible.value = true;\r\n        setTimeout(() => {\r\n            showSide.value = true;\r\n        }, 100)\r\n    }\r\n})\r\n\r\nwatch(() => props.visible, (val) => {\r\n    if(props.enableSearch && props.visible) {\r\n        nextTick(() => {\r\n            sidebar_search.value.focus();\r\n        })\r\n    }\r\n    if(val === false) {\r\n        setTimeout(() => {\r\n            visible.value = val;\r\n            search.value = \"\";\r\n        }, 100)\r\n        showSide.value = val;\r\n    } else {\r\n        setTimeout(() => {\r\n            showSide.value = val;\r\n        }, 100)\r\n        visible.value = val;\r\n    }\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"css\" src=\"./style.css\">\r\n\r\n</style>","import script from \"./Sidebar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./style.css?vue&type=style&index=0&lang=css&external\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"position-re\">\r\n        <button class=\"position-ab btn btn-primary border-right-radius-0\" style=\"right: -15px;\" @click=\"visible=true\">&lt;</button>\r\n        <div>\r\n            Lobby - {{$route.params?.id}}\r\n        </div>\r\n        <div class=\"d-flex align-items-center\">\r\n            <button class=\"btn btn-primary mr-10px\" v-if=\"lobbyData?.lobbyLeader === userId\" @click=\"createMatchFun()\">Start Match</button>\r\n            <button class=\"btn btn-primary\" @click=\"leaveLobbyFun()\">Leave Lobby</button>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                code: {{lobbyData?.lobbyCode}}\r\n            </div>\r\n            <div>\r\n                players: {{lobbyData?.players}}\r\n            </div>\r\n            <div>\r\n                number of playerrs: {{lobbyData?.players?.length}}\r\n            </div>\r\n            <div>\r\n                max players: {{MAX_LOBBY_PLAYERS}}\r\n            </div>\r\n            <div>\r\n                Active Match: {{lobbyData?.activeMatch}}\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"d-flex\">\r\n            INVITES\r\n            <Sidebar\r\n                v-model:visible=\"visible\"\r\n                title=\"Friends\"\r\n                :options=\"friends\"\r\n                offset=\"15px\"\r\n                top=\"0px\"\r\n            >\r\n                <template #options=\"{data}\">\r\n                    <div\r\n                        class=\"d-flex align-items-center justify-content-between hover-bg-light-blue\"\r\n                        style=\"padding: 10px 15px;\"\r\n                    >\r\n                        <span class=\"text-capitalize\">{{data?.userName}}</span>\r\n\r\n                        <template v-if=\"lobbyData?.players?.length < MAX_LOBBY_PLAYERS\">\r\n                            <button\r\n                                v-if=\"!lobbyData?.players?.includes(data._id)\"\r\n                                class=\"btn\"\r\n                                :class=\"{'btn-secondary cursor-default': checkInvited(data._id), 'btn-primary cursor-pointer': !checkInvited(data._id)}\"\r\n                                :disabled=\"checkInvited(data._id)\"\r\n                                @click=\"!checkInvited(data._id) ? inviteToLobbyFun(data) : ''\"\r\n                            >\r\n                                {{checkInvited(data._id) ? \"Requested\" : \"Invite\"}}\r\n                            </button>\r\n                            <button\r\n                                v-else\r\n                                class=\"btn btn-success cursor-default\"\r\n                            >\r\n                                Joined\r\n                            </button>\r\n                        </template>\r\n                        <template v-else>\r\n                            <button\r\n                                v-if=\"lobbyData?.players?.includes(data._id)\"\r\n                                class=\"btn btn-success cursor-default\"\r\n                            >\r\n                                Joined\r\n                            </button>\r\n                            <button\r\n                                v-else\r\n                                class=\"btn btn-secondary cursor-default\"\r\n                            >\r\n                                Invite\r\n                            </button>\r\n                        </template>\r\n                    </div>\r\n                </template>\r\n            </Sidebar>\r\n\r\n            <div\r\n                class=\"m-5px red\"\r\n                v-for=\"(invitation, index) in invitations\"\r\n                :key=\"index\"\r\n            >\r\n                {{invitation?.receiver}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n// PACAKGES\r\nimport { dbCollections } from \"@/config/collections\";\r\nimport { getLobby, inviteToLobby, leaveLobby } from \"@/helpers/lobby\";\r\nimport { createMatch } from \"@/helpers/match\";\r\nimport { mongodbSnapshot } from \"@/utils/realm/crudOperationsWithSanpshot/crudOperationsWithSanpshot\";\r\nimport { computed, defineComponent, inject, onBeforeUnmount, onMounted, ref } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useToast } from \"vue-toast-notification\";\r\nimport { useStore } from \"vuex\";\r\nimport { mongodbCrudOperations } from \"@/utils/realm/crudOperations/crudOperations\";\r\nimport { MAX_LOBBY_PLAYERS } from \"@/config/env\";\r\n\r\n// COMPONENTS\r\nimport Sidebar from \"@/components/molecule/Sidebar/Sidebar.vue\"\r\nimport { BSON } from \"realm-web\";\r\n\r\n// HELPERS\r\nconst {getters} = useStore();\r\nconst userId = inject(\"userId\");\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst $toast = useToast();\r\n\r\ndefineComponent({\r\n    name: \"Lobby-Component\"\r\n})\r\n\r\nconst invitationSnap = ref();\r\nconst invitations = ref([]);\r\nconst visible = ref(false);\r\nconst lobbyData = ref();\r\nconst friends = computed(() => {\r\n    return getters[\"users/friends\"] || [];\r\n})\r\n\r\nonMounted(() => {\r\n    checkValidLobby()\r\n    .then((valid) => {\r\n        if(valid) {\r\n            init()\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"ERROR in check lobby: \", error);\r\n        $toast.error(\"Invalid lobby\", {position: \"top-right\"});\r\n        router.replace({name: \"Home\"});\r\n    })\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n    if(invitationSnap.value?.return) {\r\n        invitationSnap.value.return();\r\n    }\r\n})\r\n\r\nfunction checkValidLobby() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            getLobby(route.params?.id)\r\n            .then((res) => {\r\n                if(res?.data) {\r\n                    if(res.data?.players.includes(userId.value)) {\r\n                        if(res.data?.activeMatch) {\r\n                            router.replace({name: \"Match\", params: {id: route.params.id, mid: res.data.activeMatch}})\r\n                        } else {\r\n                            lobbyData.value = res.data;\r\n                        }\r\n                        resolve(res.data);\r\n                    } else {\r\n                        router.replace({name: \"Home\"});\r\n                        reject(\"Invalid lobby\");\r\n                    }\r\n                } else {\r\n                    reject(\"No data found\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                reject(error)\r\n            })\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n}\r\n\r\nfunction fetchLobbies() {\r\n    const options = {\r\n        subCollection: dbCollections.LOBBIES,\r\n        watchFilter: {\r\n            filter: {\r\n                $or: [\r\n                    {\r\n                        \"operationType\": {$in: [\"delete\"]}\r\n                    },\r\n                    {\r\n                        \"fullDocument._id\": BSON.ObjectId(route.params.id)\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    mongodbSnapshot(options, ({data, type, error, snap}) => {\r\n        if(error) {\r\n            console.error(\"ERROR in watch lobby: \", error);\r\n        } else {\r\n            if(type === \"insert\") {\r\n                lobbyData.value = data.fullDocument;\r\n            } else if (type === \"update\" || type === \"replace\") {\r\n                lobbyData.value = data.fullDocument;\r\n\r\n                if(lobbyData.value?.lobbyClosed || !lobbyData.value?.players.includes(userId.value)) {\r\n                    router.replace({name: \"Home\"});\r\n                    snap?.return();\r\n                }\r\n            } else if (type === \"delete\") {\r\n                router.replace({name: \"Home\"});\r\n                snap?.return();\r\n            }\r\n\r\n            if(lobbyData.value?.activeMatch) {\r\n                router.replace({name: \"Match\", params: {id: route.params.id, mid: lobbyData.value?.activeMatch}})\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction fetchInvitations() {\r\n    const options = {\r\n        subCollection: dbCollections.INVITATION,\r\n        watchFilter: {\r\n            filter: {\r\n                $or: [\r\n                    {\r\n                        \"operationType\": {$in: [\"delete\"]}\r\n                    },\r\n                    {\r\n                        \"fullDocument.lobbyId\": route.params.id,\r\n                        \"operationType\": {$in: [\"update\", \"insert\", \"replace\"]}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    mongodbSnapshot(options, ({data, type, error, snap}) => {\r\n        if(error) {\r\n            console.error(\"ERROR in watch invitations: \", error);\r\n        } else {\r\n            invitationSnap.value = snap;\r\n            if(type === \"inital\") {\r\n                mongodbCrudOperations({\r\n                    data: [\r\n                        {\r\n                            \"lobbyId\": route.params.id\r\n                        }\r\n                    ],\r\n                    type: \"find\",\r\n                    collection: dbCollections.INVITATION\r\n                })\r\n                .then((res) => {\r\n                    invitations.value = res;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"ERROR in fetch invitations: \", error);\r\n                })\r\n            }\r\n            else if(type === \"insert\") {\r\n                invitations.value.push(data.fullDocument);\r\n            } else if (type === \"update\" || type === \"replace\") {\r\n                const invitationIndex = invitations.value.findIndex((x) => x._id === data.fullDocument?._id)\r\n\r\n                if(invitationIndex !== -1) {\r\n                    invitations.value[invitationIndex] = data.fullDocument;\r\n                } else {\r\n                    invitations.value.push(data.fullDocument);\r\n                }\r\n            } else if (type === \"delete\") {\r\n                const invitationIndex = invitations.value.findIndex((x) => x._id === data.documentKey?._id)\r\n                if(invitationIndex !== -1) {\r\n                    invitations.value.splice(invitationIndex, 1);\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction init() {\r\n    fetchLobbies();\r\n    fetchInvitations();\r\n}\r\n\r\nfunction checkInvited(receiverId) {\r\n    return !(!invitations.value.find((x) => x?.receiverId === receiverId));\r\n}\r\n\r\nfunction inviteToLobbyFun(receiver) {\r\n    try {\r\n        inviteToLobby(route.params.id, userId.value, {userName: receiver.userName})\r\n        .then((res) => {\r\n            if(res.status) {\r\n                $toast.success(res.data?.statusText, {position: \"top-right\"})\r\n            } else {\r\n                $toast.error(res.data?.statusText, {position: \"top-right\"})\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"ERROR in invite to lobby: \", error?.response?.data?.statusText || error);\r\n            $toast.error(error.response?.data?.statusText || \"Something went wrong\", {position: \"top-right\"});\r\n        })\r\n    } catch (error) {\r\n        console.error(\"ERROR in invite to lobby\", error);\r\n    }\r\n}\r\n\r\nfunction createMatchFun() {\r\n    createMatch(route.params.id, {\r\n        \"players\": lobbyData.value?.players,\r\n        perPlayerCardsNumber: 12\r\n    })\r\n    .then((res) => res.data)\r\n    .then((res) => {\r\n        if(res.status) {\r\n            router.push({name: \"Match\", params: {id: route.params.id, mid: res.data._id}});\r\n            $toast.success(\"Match created successfully\", {position: \"top-right\"})\r\n        } else {\r\n            $toast.error(res.statusText, {position: \"top-right\"})\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.error(\"ERROR in start match: \", error.response?.data?.statusText || error);\r\n        $toast.error(error.response?.data?.statusText || \"Something went wrong\", {position: \"top-right\"});\r\n    })\r\n}\r\n\r\nfunction leaveLobbyFun() {\r\n    leaveLobby(route.params?.id, userId.value)\r\n    .then((res) => res.data)\r\n    .then((res) => {\r\n        if(res.status) {\r\n            $toast.success(\"Lobby left\", {position: \"top-right\"});\r\n            router.replace({name: \"Home\"});\r\n        } else {\r\n            $toast.error(res?.statusText, {position: \"top-right\"});\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        $toast.error(error.response?.data?.statusText || \"Something went wrong\", {position: \"top-right\"});\r\n        console.error(\"ERROR in leave lobby: \", error);\r\n    })\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n\r\n</style>","import script from \"./Lobby.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Lobby.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["createLobby","userId","Promise","resolve","reject","lobbyData","apiRequest","post","API_URL","then","res","catch","error","getLobby","lobbyId","get","inviteToLobby","sender","receiver","userName","email","inviteObject","joinLobby","data","inviteId","lobbyCode","endpoint","axiosData","rejectInvite","delete","leaveLobby","patch","createMatch","matchDetails","getMatch","matchId","updateBid","setTrumpAndPartners","playCard","defineComponent","name","props","__props","showSide","ref","search","sidebar_search","visible","onMounted","value","setTimeout","watch","val","enableSearch","nextTick","focus","__exports__","getters","useStore","inject","route","useRoute","router","useRouter","$toast","useToast","invitationSnap","invitations","friends","computed","checkValidLobby","params","id","players","includes","activeMatch","replace","mid","fetchLobbies","options","subCollection","dbCollections","LOBBIES","watchFilter","filter","$or","$in","BSON","mongodbSnapshot","type","snap","console","fullDocument","lobbyClosed","return","fetchInvitations","INVITATION","mongodbCrudOperations","collection","push","invitationIndex","findIndex","x","_id","documentKey","splice","init","checkInvited","receiverId","find","inviteToLobbyFun","status","success","statusText","position","response","createMatchFun","perPlayerCardsNumber","leaveLobbyFun","valid","onBeforeUnmount"],"sourceRoot":""}